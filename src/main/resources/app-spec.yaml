openapi: 3.0.0
info:
  title: Controle de Estoque API
  version: 1.0.0
paths:
  /auth/login:
    post:
      summary: Authenticate user and generate JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Authentication successful, JWT token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The generated JWT token
        '400':
          description: Invalid credentials
          content:
            text/plain:
              schema:
                type: string
  /categorias:
    post:
      summary: Cria uma nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoriaDto'
      responses:
        '201':
          description: Categoria criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categorias'
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno do servidor
    get:
      summary: Lista todas as categorias
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categorias'
        '500':
          description: Erro interno do servidor
  /fornecedores:
    post:
      summary: Cria um novo fornecedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFornecedorDto'
      responses:
        '201':
          description: Fornecedor criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fornecedores'
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno do servidor
    get:
      summary: Lista todos os fornecedores
      responses:
        '200':
          description: Lista de fornecedores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fornecedores'
        '500':
          description: Erro interno do servidor
  /produtos:
    post:
      summary: Cria um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProdutoDto'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produtos'
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno do servidor
    get:
      summary: Lista todos os produtos
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Produtos'
        '500':
          description: Erro interno do servidor
    put:
      summary: Modifica um produto existente
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID do produto a ser modificado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProdutoDto'
      responses:
        '200':
          description: Produto modificado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produtos'
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno do servidor
components:
  schemas:
    CreateCategoriaDto:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
    Categorias:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        descricao:
          type: string
        ativo:
          type: boolean
    CreateFornecedorDto:
      type: object
      properties:
        nome:
          type: string
        cnpj:
          type: string
        endereco:
          $ref: '#/components/schemas/Endereco'
        telefone:
          type: string
        email:
          type: string
    Fornecedores:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        cnpj:
          type: string
        endereco:
          $ref: '#/components/schemas/Endereco'
        telefone:
          type: string
        email:
          type: string
        ativo:
          type: boolean
    Endereco:
      type: object
      properties:
        rua:
          type: string
        numero:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        cep:
          type: string
    CreateProdutoDto:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        codigoBarra:
          type: string
        categoria:
          type: string
        precoCusto:
          type: number
          format: double
        precoVenda:
          type: number
          format: double
        unidadeMedida:
          type: string
        fornecedor:
          type: string
        atributos:
          type: object
          additionalProperties: true
    Produtos:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        descricao:
          type: string
        codigoBarra:
          type: string
        categoria:
          type: string
        precoCusto:
          type: number
          format: double
        precoVenda:
          type: number
          format: double
        unidadeMedida:
          type: string
        fornecedor:
          type: string
        imagens:
          type: array
          items:
            type: string
        ativo:
          type: boolean
        dataCadastro:
          type: string
          format: date-time
        atributos:
          type: object
          additionalProperties: true
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          description: User's password
      required:
        - email
        - password